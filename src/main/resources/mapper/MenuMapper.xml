<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sennet.bizcommon.MenuMapper">
	<!-- parameterType 에는 구문에 전달될 파라미터의 패키지 경로를 포함한 전체 클래명이나 별칭이 들어간다  -->
    <select id="searchListMenu" parameterType="java.util.Map"  resultType="MenuVo">
				 select
				        menu_.menu_id as menuId,
				        menu_.view_seq as viewSeq,
				        menu_.menu_url as menuUrl,
				        menu_.menu_name as menuName,
				        menu_.menu_cd as menuCd,
				        dcode_.dcode_name as dcodeName,
				        menu_.first_user_id as firstUserId,
				        menu_.first_datetime as firstDatetime,
				        menu_.last_user_id as lastUserId,
				        menu_.last_datetime as lastDatetime
				    from
				        cm_menu_master menu_, 
				        cm_common_dcode dcode_ 
				    where 1 = 1   
				    	AND menu_.menu_cd = dcode_.dcode
				    	AND dcode_.gcode='MENU_CD'
					<if test="menuName != null and menuName != ''">
						 and menu_.menu_name like '%'||#{menuName}||'%'
					</if>
					order  by 	dcode_.VIEW_SEQ asc,menu_.view_seq asc
				
				
				
		</select>
	    <select id="findOneMenu" parameterType="String"  resultType="MenuVo">
			 select
			        menu_.menu_id as menuId,
			        menu_.view_seq as viewSeq,
			        menu_.menu_url as menuUrl,
			        menu_.menu_name as menuName,
			        menu_.menu_cd as menuCd,
			        menu_.first_user_id as firstUserId,
			        menu_.first_datetime as firstDatetime,
			        menu_.last_user_id as lastUserId,
			        menu_.last_datetime as lastDatetime
			    from
			        cm_menu_master menu_  
			    where 1 = 1
			    and menu_.menu_id = #{menuId}
		</select>
	    <delete id="deleteMenu" parameterType="String">
	    		delete
			    from
			        cm_menu_master menu_  
			    where 1 = 1
			    and menu_.menu_id = #{menuId}
		</delete>
		
		<insert id="saveMenu" >
			MERGE INTO cm_menu_master 
	            USING dual 
	            ON (menu_id = #{menuId})   <!--  중복조건 --> 
			    WHEN MATCHED THEN<!-- primary key가 중복될 경우 처리할 쿼리--> 
			        UPDATE SET 
			        view_seq = #{viewSeq},
			        menu_url = #{menuUrl},
			        menu_name = #{menuName},
			        menu_cd = #{menuCd},
			        first_user_id = #{firstUserId},
			        first_datetime = #{firstDatetime},
			        last_user_id = #{lastUserId},
			        last_datetime = #{lastDatetime}
			    WHEN NOT MATCHED THEN <!-- primary key가 중복되지 않을 경우 처리할 쿼리-->
			        INSERT(
				        menu_id,
				        view_seq,
				        menu_url,
				        menu_name,
				        menu_cd,
				        first_user_id,
				        first_datetime,
				        last_user_id,
				        last_datetime
			        )
			        VALUES(
				        #{menuId},
				        #{viewSeq},
						#{menuUrl},
						#{menuName},
						#{menuCd},
						#{firstUserId},
						#{firstDatetime},
						#{lastUserId},
						#{lastDatetime}
			        )
	     </insert>
</mapper>