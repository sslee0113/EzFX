<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sennet.bizcommon.BranchMapper">
	<!-- parameterType 에는 구문에 전달될 파라미터의 패키지 경로를 포함한 전체 클래명이나 별칭이 들어간다  -->
    <select id="searchListBranch" parameterType="java.util.Map"  resultType="BranchVo">
			 select
			        branch_.brno brno,
					branch_.kor_name korName,
					branch_.eng_name engName,
					branch_.fx_brn_no fxBrnNo,
					branch_.tel_no telNo,
					branch_.fax_no faxNo,
					branch_.zip_code zipCode,
					branch_.addr addr,
					branch_.brn_type brnType,
					branch_.sta_cd staCd,
					branch_.first_date firstDate,
					branch_.first_time firstTime,
					branch_.last_date lastDate,
					branch_.last_time lastTime
			    from
			        cm_branch_code branch_
			    where sta_cd = '0' AND 1 = 1 
				<if test="brno != null and brno != ''">
					 and branch_.brno like '%'||#{brno}||'%'
				</if>
				<if test="korName != null and korName != ''">
					 and branch_.kor_name like '%'||#{korName}||'%'
				</if>
		</select>
	    <select id="findOneBranch" parameterType="String"  resultType="BranchVo">
			 select
			        branch_.brno brno,
					branch_.kor_name korName,
					branch_.eng_name engName,
					branch_.fx_brn_no fxBrnNo,
					branch_.tel_no telNo,
					branch_.fax_no faxNo,
					branch_.zip_code zipCode,
					branch_.addr addr,
					branch_.brn_type brnType,
					branch_.sta_cd staCd,
					
					branch_.first_date firstDate,
					branch_.first_time firstTime,
					branch_.last_date lastDate,
					branch_.last_time lastTime
			    from
			        cm_branch_code branch_
			    where 1 = 1
			    and branch_.brno = #{brno}
			</select>
		
		<insert id="saveBranch" >
			MERGE INTO cm_branch_code 
	            USING dual 
	            ON (brno = #{brno})  	 <!--  중복조건 --> 
			    WHEN MATCHED THEN<!-- primary key가 중복될 경우 처리할 쿼리--> 
			        UPDATE SET
			        kor_name		= #{korName} 
			        ,eng_name		= #{engName}
			        ,fx_brn_no		= #{fxBrnNo}
			        ,tel_no			= #{telNo}
			        ,fax_no			= #{faxNo}
			        ,zip_code		= #{zipCode}
			        ,addr			= #{addr}
			        ,brn_type		= #{brnType}
			        ,sta_cd			= #{staCd}
					,first_date		= #{firstDate}
					,first_time		= #{firstTime}
					,last_date		= #{lastDate}
					,last_time		= #{lastTime}
			    WHEN NOT MATCHED THEN <!-- primary key가 중복되지 않을 경우 처리할 쿼리-->
			        INSERT(
				        brno
				        ,kor_name
				        ,eng_name
				        ,fx_brn_no
				        ,tel_no
				        ,fax_no
				        ,zip_code
				        ,addr
				        ,brn_type
				        ,sta_cd
				        ,first_date
				        ,first_time
				        ,last_date
				        ,last_time
			        )
			        VALUES(
			        #{brno}
			        ,#{korName}
					,#{engName}
					,#{fxBrnNo}
					,#{telNo}
					,#{faxNo}
					,#{zipCode}
					,#{addr}
					,#{brnType}
					,#{staCd}
					,#{firstDate}
					,#{firstTime}
					,#{lastDate}
					,#{lastTime} 
			        )
	     </insert>
</mapper>